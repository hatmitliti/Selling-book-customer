package com.example.book.Screen;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import com.example.book.MainActivity;import com.example.book.Object.User;import com.example.book.R;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.database.ChildEventListener;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.FirebaseDatabase;import java.util.ArrayList;public class SplashActivity extends AppCompatActivity {    int dem = 0;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_splash);        Handler handler = new Handler();        handler.postDelayed(new Runnable() {            @Override            public void run() {                checkLogin();            }        }, 3000);    }    private void checkLogin() {        FirebaseUser mUser = FirebaseAuth.getInstance().getCurrentUser();        getListUserAll();        if (mUser == null) {            //redirect to sign in screen            startActivity(new Intent(SplashActivity.this, SignInActivity.class));            finish();        } else {            FirebaseAuth.getInstance().signOut();            startActivity(new Intent(SplashActivity.this, SignInActivity.class));            finish();        }        //close splash screen    }    public ArrayList<String> getListUserAll() {        ArrayList<String> list = new ArrayList<>();        FirebaseDatabase.getInstance().getReference("users").addChildEventListener(new ChildEventListener() {            @Override            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {                dem++;                list.add(snapshot.getKey());            }            @Override            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onChildRemoved(@NonNull DataSnapshot snapshot) {            }            @Override            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {            }            @Override            public void onCancelled(@NonNull DatabaseError error) {            }        });        return list;    }}